{"version":3,"sources":["components/Item.js","components/Info.js","components/Shop.js","components/Home.js","components/Navbar.js","components/Cart.js","App.js","index.js"],"names":["Item","props","productInfo","addCartItems","useState","quantity","setQuantity","name","price","className","onChange","event","newQuantity","target","value","type","step","min","max","onClick","reservedInfo","item","parseInt","Info","date","Date","nextDay","getDate","getMonth","getFullYear","Shop","itemInfo","Object","keys","map","info","Home","Navbar","numCartItems","cartItems","length","to","Cart","adjustCartItems","deleteCartItem","key","addQuantity","reduceQuantity","removeItem","colSpan","reduce","acc","App","setCartItems","exact","path","component","msw","redprawn","d24","xo","s17","jf","d13","console","log","newCartItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfae4a60.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst Item = (props) => {\n  const { productInfo, addCartItems } = props;\n  const [quantity, setQuantity] = useState(0);\n  const { name, price, className } = productInfo;\n\n  function adjustQuantity(event) {\n    let newQuantity = event.target.value;\n    if (newQuantity >= 0 && newQuantity <= 20) {\n      setQuantity(newQuantity);\n    }\n  }\n\n  function reserve() {\n    if (quantity > 0) {\n      let reservedInfo = {\n        item: className,\n        quantity: parseInt(quantity),\n        productInfo: productInfo,\n      };\n      addCartItems(reservedInfo);\n    }\n    setQuantity(0);\n  }\n\n  return (\n    <div className=\"item-card\">\n      <div className=\"image-wrapper\">\n        <div className={`image ${className}`} />\n      </div>\n      <div>\n        <div className=\"item-info\">\n          <span>{name}</span>{\" \"}\n        </div>\n        <div className=\"item-qty\">\n          <span>\n            Reserve Weight (${price}/kg):{\" \"}\n            <input\n              onChange={adjustQuantity}\n              value={quantity}\n              type=\"number\"\n              step=\"1\"\n              min=\"0\"\n              max=\"20\"\n            ></input>\n            {\" \"}kg\n          </span>\n        </div>\n        <div>\n          <button className=\"reserve-btn\" onClick={reserve}>\n            Reserve - Total Price: ${quantity * price}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n","const Info = () => {\n  let date = new Date();\n  let nextDay =\n    date.getDate() + 1 + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n  return (\n    <aside className=\"info\">\n      <h2>Reservation Information</h2>\n      <ul>\n        <li>Rerservation of durians today are for {nextDay}.</li>\n        <li>Durians sold are fresh and just dropped within the last 8 hours.</li>\n        <li>\n          Durians are natural products so may sometimes turn out unripe. Let us\n          know and we will replace it for you with no questions asked.\n        </li>\n        <li>\n            Most importantly, enjoy your durian!\n        </li>\n      </ul>\n    </aside>\n  );\n};\n\nexport default Info\n","import Item from \"./Item\";\nimport Info from \"./Info\"\nconst Shop = (props) => {\n  const { itemInfo, addCartItems } = props;\n  return (\n    <div className=\"shop\">\n      <div className=\"items-display\">\n        {Object.keys(itemInfo).map((info) => {\n          return (\n            <Item\n              productInfo={itemInfo[info]}\n              addCartItems={addCartItems}\n              key={info}\n            />\n          );\n        })}\n      </div>\n      <Info/>\n    </div>\n  );\n};\n\nexport default Shop;\n","const Home = () => {\n    return(\n        <div className=\"home-wrapper\">\n            <header>\n                <h1>\n                    Durian Goodness\n                </h1>\n                <h2>\n                    Durian so fresh that its finger licking good\n                </h2>\n            </header>\n            <div className=\"home-img-wrapper\">\n                <div className=\"home-durian home-img\">\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import {Link} from 'react-router-dom'\n\nconst Navbar = (props) => {\n    let numCartItems = Object.keys(props.cartItems).length\n\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to='/'>Home</Link>\n                </li>\n                <li>\n                    <Link to='/shop'>Shop</Link>\n                </li>\n                <li>\n                    <Link to='/cart'>Cart { numCartItems ? `(${numCartItems})` : \"\"} </Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar","const Cart = (props) => {\n  const { cartItems, adjustCartItems, deleteCartItem } = props;\n\n  function getTotalPrice() {\n    let totalPrice = Object.keys(cartItems).reduce((acc, key) => {\n      let subtotal = cartItems[key].itemInfo.price * cartItems[key].quantity;\n      return acc + subtotal;\n    }, 0);\n    return totalPrice;\n  }\n\n  function addQuantity(key) {\n    let newQuantity = cartItems[key].quantity + 1;\n    if (newQuantity <= 20) {\n      adjustCartItems(key, newQuantity);\n    }\n  }\n\n  function reduceQuantity(key) {\n    let newQuantity = cartItems[key].quantity - 1;\n    if (newQuantity > 0) {\n      adjustCartItems(key, newQuantity);\n    }\n  }\n\n  function removeItem(key) {\n    deleteCartItem(key);\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      <table>\n        <thead>\n          <tr>\n            <th>Durian</th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Subtotal</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(cartItems).map((key) => {\n            let itemInfo = cartItems[key].itemInfo;\n            return (\n              <tr>\n                <td className=\"cart-img-wrapper\">\n                  <div className={`cart-img ${itemInfo.className}`}></div>\n                  <div className=\"cart-item\">{itemInfo.name}</div>\n                </td>\n                <td>${itemInfo.price}/kg</td>\n                <td>\n                  {cartItems[key].quantity}kg \n                  {\"  \"}\n                  <button onClick={() => addQuantity(key)}>+</button>\n                  {\"  \"}\n                  <button onClick={() => reduceQuantity(key)}>-</button>\n                </td>\n                <td>${cartItems[key].quantity * itemInfo.price}</td>\n                <td>\n                  <button onClick={() => removeItem(key)}>\n                    Remove From Cart\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td colSpan=\"3\" className=\"align-end\">Total:</td>\n            <td>${getTotalPrice()}</td>\n            <td>\n              <button className=\"order-btn\">Place Reservation</button>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  );\n};\n\nexport default Cart;\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport Shop from \"./components/Shop\";\nimport Home from \"./components/Home\";\nimport Navbar from './components/Navbar'\nimport Cart from \"./components/Cart\";\nimport \"./index.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const itemInfo = {\n    msw: { name: \"Mao Shan Wang\", price: 20, className: \"msw\" },\n    redprawn: { name: \"Red Prawn\", price: 13, className: \"redprawn\" },\n    d24: { name: \"D24\", price: 13, className: \"d24\"},\n    xo: { name: \"XO\", price: 15, className: \"xo\"},\n    s17: { name: \"S17\", price: 14, className: \"s17\" },\n    jf: { name: \"Jin Feng\", price: 18, className: \"jf\"},\n    d13: {name: \"D13\", price: 10, className: \"d13\"}\n  };\n  const [cartItems, setCartItems] = useState({});\n\n  function addCartItems(reservedInfo) {\n    if (cartItems[reservedInfo.item]) {\n      let newQuantity =\n        cartItems[reservedInfo.item].quantity + reservedInfo.quantity;\n      //Prevent adding more than 20kg to cart\n      if (newQuantity > 20) {\n        setCartItems({\n          ...cartItems,\n          [reservedInfo.item]: {\n            quantity: 20,\n            itemInfo: reservedInfo.productInfo,\n          },\n        });\n        console.log(\"set to 20\");\n      } else {\n        setCartItems({\n          ...cartItems,\n          [reservedInfo.item]: {\n            quantity: newQuantity,\n            itemInfo: reservedInfo.productInfo,\n          },\n        });\n      }\n    } //If particular item has not been added to cart before\n    else {\n      setCartItems({\n        ...cartItems,\n        [reservedInfo.item]: {\n          quantity: reservedInfo.quantity,\n          itemInfo: reservedInfo.productInfo,\n        },\n      });\n    }\n  }\n\n  function adjustCartItems(key, newQuantity) {\n    setCartItems({\n      ...cartItems,\n      [key]: { quantity: newQuantity, itemInfo: cartItems[key].itemInfo },\n    });\n  }\n\n  function deleteCartItem(key) {\n    const { [key]: value, ...newCartItems } = cartItems;\n    setCartItems(newCartItems);\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar cartItems={cartItems} />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/shop\">\n          <Shop itemInfo={itemInfo} addCartItems={addCartItems} />\n        </Route>\n        <Route path=\"/cart\">\n          <Cart\n            cartItems={cartItems}\n            adjustCartItems={adjustCartItems}\n            deleteCartItem={deleteCartItem}\n          />\n        </Route>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}